{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "",
  "Parameters" : {
    "LambdaCodeBucket" : {
      "Type": "String",
      "Default": "verisk-lambda-code",
      "Description": "Bucket w/ lambda code"
    },
    "LambdaCodeKey" : {
      "Type": "String",
      "Default": "verisk-lambda-code",
      "Description": "Bucket w/ lambda code"
    }
  },
  "Resources": {

    "TaskQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "task-queue",
        "MessageRetentionPeriod": "1209600",
        "VisibilityTimeout": "60",
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "DeadLetterQueue",
              "Arn"
            ]
          },
          "maxReceiveCount": "10"
        }
      }
    },

    "DeadLetterQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "dead-letter-queue",
        "MessageRetentionPeriod": "1209600"
      }
    },

    "ScheduleRuleForConsumerLambda": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "Schedule Rule for Consumer Lambda",
        "ScheduleExpression": "rate(1 minute)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "ConsumerLambda",
                "Arn"
              ]
            },
            "Id": "DailyScheduleTarget"
          }
        ]
      }
    },

    "PermissionToInvokeConsumerLambda": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "ConsumerLambda"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "ScheduleRuleForConsumerLambda",
            "Arn"
          ]
        }
      }
    },

    "ConsumerLambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [

          {
            "PolicyName": "logs",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                }
              ]
            }
          },
          {
            "PolicyName": "sqs",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage"
                  ],
                  "Resource": {
                    "Fn::GetAtt": [
                      "TaskQueue",
                      "Arn"
                    ]
                  }
                }
              ]
            }
          },
          {
            "PolicyName": "lambda",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "lambda:InvokeFunction"
                  ],
                  "Resource": {
                    "Fn::GetAtt": [
                      "WorkerLambda",
                      "Arn"
                    ]
                  }
                }
              ]
            }
          }

        ]
      }
    },

    "ConsumerLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "LambdaCodeBucket"
          },
          "S3Key": {
            "Ref": "LambdaCodeKey"
          }
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "ConsumerLambdaRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs6.10",
        "Timeout": 60
      }
    },
    "WorkerLambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {"Service": "lambda.amazonaws.com"},
            "Action": ["sts:AssumeRole"]
          }]
        },
        "Path": "/",
        "Policies": [{
          "PolicyName": "logs",
          "PolicyDocument": {
            "Statement": [{
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": "arn:aws:logs:*:*:*"
            }]
          }
        },
          {
            "PolicyName": "sqs",
            "PolicyDocument": {
              "Statement": [{
                "Effect": "Allow",
                "Action": [
                  "sqs:DeleteMessage"
                ],
                "Resource": {"Fn::GetAtt": ["TaskQueue", "Arn"]}
              }
              ]}
          }]
      }
    },
    "WorkerLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket" : {"Ref": "LambdaCodeBucket"},
          "S3Key" : {"Ref": "WorkerLambdaCodeKey"}
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {"Fn::GetAtt": ["WorkerLambdaRole", "Arn"]},
        "Runtime": "nodejs6.10",
        "Timeout": 60
      }
    }
  },
  "Outputs": {
    "QueueName": {
      "Description": "The queue name",
      "Value": {
        "Fn::Join": [
          "",
          [
            "Main Queue",
            {
              "Fn::GetAtt": [
                "TaskQueue",
                "QueueName"
              ]
            }
          ]
        ]
      }
    }
  }
}